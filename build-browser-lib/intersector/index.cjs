"use strict";var y=(n,t,r)=>{if(!t.has(n))throw TypeError("Cannot "+r)};var s=(n,t,r)=>(y(n,t,"read from private field"),r?r.call(n):t.get(n)),b=(n,t,r)=>{if(t.has(n))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(n):t.set(n,r)},f=(n,t,r,e)=>(y(n,t,"write to private field"),e?e.call(n,r):t.set(n,r),r);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const w=require("../browser-CpzFX2xg.cjs"),d=require("../dom-qY2LdCVL.cjs");var i,u,l;class m{constructor(){b(this,i,[]);b(this,u,null);b(this,l,t=>{s(this,i).map(e=>({subscriber:e,entry:t.find(o=>o.target===e.element)})).forEach(e=>{e.entry&&(e.subscriber.entry=e.entry,e.subscriber.callback(e.entry))})});w.isBrowser&&window.IntersectionObserver&&f(this,u,new IntersectionObserver(s(this,l)))}subscribe(t,r){const e=d.getElement(t);if(!e)return()=>{};const o=s(this,i).find(c=>c.element===e);if(!o)s(this,u).observe(e);else{const c=s(this,i).find(h=>h.element===e&&h.entry);c!=null&&c.entry.isIntersecting&&r(c.entry)}return s(this,i).push({element:e,callback:r,entry:(o==null?void 0:o.entry)||null}),()=>{this.unsubscribe(r)}}unsubscribe(t){const r=s(this,i).find(e=>e.callback===t);r&&(f(this,i,s(this,i).filter(e=>e.callback===t)),s(this,i).find(e=>e.element===r.element)||s(this,u).unobserve(r.element))}}i=new WeakMap,u=new WeakMap,l=new WeakMap;const g=new m;exports.Intersector=m;exports.intersector=g;
