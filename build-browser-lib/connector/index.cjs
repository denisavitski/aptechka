"use strict";var f=(i,n,e)=>{if(!n.has(i))throw TypeError("Cannot "+e)};var c=(i,n,e)=>(f(i,n,"read from private field"),e?e.call(i):n.get(i)),d=(i,n,e)=>{if(n.has(i))throw TypeError("Cannot add the same private member more than once");n instanceof WeakSet?n.add(i):n.set(i,e)},h=(i,n,e,l)=>(f(i,n,"write to private field"),l?l.call(i,e):n.set(i,e),e);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});var a,s,o,r;class b{constructor(){d(this,a,[]);d(this,s,void 0);d(this,o,100);d(this,r,()=>{var n,e,l;for(let C=c(this,a).length-1;C>=0;C--){const t=c(this,a)[C];t.node.isConnected&&!t.isConnected?((n=t.connectCallback)==null||n.call(t),t.isConnected=!0):!t.node.isConnected&&t.isConnected&&((e=t.disconnectCallback)==null||e.call(t),t.isConnected=!1,t.unsubscribeAfterDisconnect&&this.unsubscribe(t)),t.timer+=c(this,o),!t.isConnected&&t.timer>t.maxWaitSec*1e3&&((l=t.disconnectCallback)==null||l.call(t,!0),this.unsubscribe(t))}})}subscribe(n,e){const l=c(this,a).length;return c(this,a).push({node:n,connectCallback:e.connectCallback,disconnectCallback:e.disconnectCallback,isConnected:!1,maxWaitSec:typeof e.maxWaitSec=="number"?e.maxWaitSec===0?c(this,o)/1e3:e.maxWaitSec:1/0,timer:0,unsubscribeAfterDisconnect:e.unsubscribeAfterDisconnect||!1}),l||(h(this,s,setInterval(c(this,r),c(this,o))),setTimeout(()=>{c(this,r).call(this)})),()=>{this.unsubscribe(e)}}unsubscribe(n){c(this,a).forEach(e=>{e.connectCallback===n.connectCallback&&(e.connectCallback=void 0),e.disconnectCallback===n.disconnectCallback&&(e.disconnectCallback=void 0)}),h(this,a,c(this,a).filter(e=>e.connectCallback||e.disconnectCallback)),c(this,a).length||(clearInterval(c(this,s)),h(this,s,void 0))}destroy(){clearInterval(c(this,s)),h(this,a,[])}}a=new WeakMap,s=new WeakMap,o=new WeakMap,r=new WeakMap;const u=new b;exports.Connector=b;exports.connector=u;
